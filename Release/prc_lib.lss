
prc_lib.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000130  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800060  00800060  000001a4  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 96 00 	jmp	0x12c	; 0x12c <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
  7c:	8e e0       	ldi	r24, 0x0E	; 14
  7e:	87 bb       	out	0x17, r24	; 23
  80:	80 e1       	ldi	r24, 0x10	; 16
  82:	81 bb       	out	0x11, r24	; 17
  84:	0e 94 5e 00 	call	0xbc	; 0xbc <recv_data>
  88:	0e 94 47 00 	call	0x8e	; 0x8e <send_data>
  8c:	fb cf       	rjmp	.-10     	; 0x84 <main+0x8>

0000008e <send_data>:
  8e:	20 e0       	ldi	r18, 0x00	; 0
  90:	30 e0       	ldi	r19, 0x00	; 0
  92:	87 ff       	sbrs	r24, 7
  94:	02 c0       	rjmp	.+4      	; 0x9a <send_data+0xc>
  96:	c2 9a       	sbi	0x18, 2	; 24
  98:	01 c0       	rjmp	.+2      	; 0x9c <send_data+0xe>
  9a:	c2 98       	cbi	0x18, 2	; 24
  9c:	c1 98       	cbi	0x18, 1	; 24
  9e:	c1 9a       	sbi	0x18, 1	; 24
  a0:	2f 5f       	subi	r18, 0xFF	; 255
  a2:	3f 4f       	sbci	r19, 0xFF	; 255
  a4:	28 30       	cpi	r18, 0x08	; 8
  a6:	31 05       	cpc	r19, r1
  a8:	11 f0       	breq	.+4      	; 0xae <send_data+0x20>
  aa:	88 0f       	add	r24, r24
  ac:	f2 cf       	rjmp	.-28     	; 0x92 <send_data+0x4>
  ae:	c3 98       	cbi	0x18, 3	; 24
  b0:	c3 9a       	sbi	0x18, 3	; 24
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	9c e6       	ldi	r25, 0x6C	; 108
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <send_data+0x28>
  ba:	08 95       	ret

000000bc <recv_data>:
  bc:	94 9a       	sbi	0x12, 4	; 18
  be:	94 98       	cbi	0x12, 4	; 18
  c0:	94 9a       	sbi	0x12, 4	; 18
  c2:	20 e0       	ldi	r18, 0x00	; 0
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	40 e0       	ldi	r20, 0x00	; 0
  c8:	50 e0       	ldi	r21, 0x00	; 0
  ca:	22 0f       	add	r18, r18
  cc:	33 1f       	adc	r19, r19
  ce:	86 b3       	in	r24, 0x16	; 22
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	81 70       	andi	r24, 0x01	; 1
  d4:	90 70       	andi	r25, 0x00	; 0
  d6:	28 2b       	or	r18, r24
  d8:	39 2b       	or	r19, r25
  da:	c1 98       	cbi	0x18, 1	; 24
  dc:	c1 9a       	sbi	0x18, 1	; 24
  de:	4f 5f       	subi	r20, 0xFF	; 255
  e0:	5f 4f       	sbci	r21, 0xFF	; 255
  e2:	40 31       	cpi	r20, 0x10	; 16
  e4:	51 05       	cpc	r21, r1
  e6:	89 f7       	brne	.-30     	; 0xca <recv_data+0xe>
  e8:	c9 01       	movw	r24, r18
  ea:	08 95       	ret

000000ec <rele_on>:
  ec:	21 e0       	ldi	r18, 0x01	; 1
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	02 c0       	rjmp	.+4      	; 0xf6 <rele_on+0xa>
  f2:	22 0f       	add	r18, r18
  f4:	33 1f       	adc	r19, r19
  f6:	8a 95       	dec	r24
  f8:	e2 f7       	brpl	.-8      	; 0xf2 <rele_on+0x6>
  fa:	80 91 60 00 	lds	r24, 0x0060
  fe:	82 2b       	or	r24, r18
 100:	80 93 60 00 	sts	0x0060, r24
 104:	0e 94 47 00 	call	0x8e	; 0x8e <send_data>
 108:	08 95       	ret

0000010a <rele_off>:
 10a:	21 e0       	ldi	r18, 0x01	; 1
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	02 c0       	rjmp	.+4      	; 0x114 <rele_off+0xa>
 110:	22 0f       	add	r18, r18
 112:	33 1f       	adc	r19, r19
 114:	8a 95       	dec	r24
 116:	e2 f7       	brpl	.-8      	; 0x110 <rele_off+0x6>
 118:	20 95       	com	r18
 11a:	80 91 60 00 	lds	r24, 0x0060
 11e:	28 23       	and	r18, r24
 120:	20 93 60 00 	sts	0x0060, r18
 124:	82 2f       	mov	r24, r18
 126:	0e 94 47 00 	call	0x8e	; 0x8e <send_data>
 12a:	08 95       	ret

0000012c <_exit>:
 12c:	f8 94       	cli

0000012e <__stop_program>:
 12e:	ff cf       	rjmp	.-2      	; 0x12e <__stop_program>
