
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000144  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800060  00800060  000001b8  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 5e 00 	call	0xbc	; 0xbc <main>
  74:	0c 94 a0 00 	jmp	0x140	; 0x140 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <rele_off>:
  7c:	21 e0       	ldi	r18, 0x01	; 1
  7e:	30 e0       	ldi	r19, 0x00	; 0
  80:	02 c0       	rjmp	.+4      	; 0x86 <rele_off+0xa>
  82:	22 0f       	add	r18, r18
  84:	33 1f       	adc	r19, r19
  86:	8a 95       	dec	r24
  88:	e2 f7       	brpl	.-8      	; 0x82 <rele_off+0x6>
  8a:	20 95       	com	r18
  8c:	80 91 60 00 	lds	r24, 0x0060
  90:	28 23       	and	r18, r24
  92:	20 93 60 00 	sts	0x0060, r18
  96:	82 2f       	mov	r24, r18
  98:	0e 94 6f 00 	call	0xde	; 0xde <send_data>
  9c:	08 95       	ret

0000009e <rele_on>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <rele_on+0xa>
  a4:	22 0f       	add	r18, r18
  a6:	33 1f       	adc	r19, r19
  a8:	8a 95       	dec	r24
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <rele_on+0x6>
  ac:	80 91 60 00 	lds	r24, 0x0060
  b0:	82 2b       	or	r24, r18
  b2:	80 93 60 00 	sts	0x0060, r24
  b6:	0e 94 6f 00 	call	0xde	; 0xde <send_data>
  ba:	08 95       	ret

000000bc <main>:
  bc:	cf 93       	push	r28
  be:	df 93       	push	r29
  c0:	8e e0       	ldi	r24, 0x0E	; 14
  c2:	87 bb       	out	0x17, r24	; 23
  c4:	80 e1       	ldi	r24, 0x10	; 16
  c6:	81 bb       	out	0x11, r24	; 17
  c8:	cc ec       	ldi	r28, 0xCC	; 204
  ca:	da e0       	ldi	r29, 0x0A	; 10
  cc:	0e 94 82 00 	call	0x104	; 0x104 <recv_data>
  d0:	8b 7f       	andi	r24, 0xFB	; 251
  d2:	0e 94 6f 00 	call	0xde	; 0xde <send_data>
  d6:	ce 01       	movw	r24, r28
  d8:	01 97       	sbiw	r24, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <main+0x1c>
  dc:	f7 cf       	rjmp	.-18     	; 0xcc <main+0x10>

000000de <send_data>:
  de:	20 e0       	ldi	r18, 0x00	; 0
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	87 ff       	sbrs	r24, 7
  e4:	02 c0       	rjmp	.+4      	; 0xea <send_data+0xc>
  e6:	c2 9a       	sbi	0x18, 2	; 24
  e8:	01 c0       	rjmp	.+2      	; 0xec <send_data+0xe>
  ea:	c2 98       	cbi	0x18, 2	; 24
  ec:	c1 98       	cbi	0x18, 1	; 24
  ee:	c1 9a       	sbi	0x18, 1	; 24
  f0:	2f 5f       	subi	r18, 0xFF	; 255
  f2:	3f 4f       	sbci	r19, 0xFF	; 255
  f4:	28 30       	cpi	r18, 0x08	; 8
  f6:	31 05       	cpc	r19, r1
  f8:	11 f0       	breq	.+4      	; 0xfe <send_data+0x20>
  fa:	88 0f       	add	r24, r24
  fc:	f2 cf       	rjmp	.-28     	; 0xe2 <send_data+0x4>
  fe:	c3 98       	cbi	0x18, 3	; 24
 100:	c3 9a       	sbi	0x18, 3	; 24
 102:	08 95       	ret

00000104 <recv_data>:
 104:	94 98       	cbi	0x12, 4	; 18
 106:	94 9a       	sbi	0x12, 4	; 18
 108:	94 98       	cbi	0x12, 4	; 18
 10a:	00 00       	nop
 10c:	c1 98       	cbi	0x18, 1	; 24
 10e:	20 e0       	ldi	r18, 0x00	; 0
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	40 e0       	ldi	r20, 0x00	; 0
 114:	50 e0       	ldi	r21, 0x00	; 0
 116:	c9 01       	movw	r24, r18
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	b0 9b       	sbis	0x16, 0	; 22
 11e:	04 c0       	rjmp	.+8      	; 0x128 <recv_data+0x24>
 120:	9c 01       	movw	r18, r24
 122:	2f 5f       	subi	r18, 0xFF	; 255
 124:	3f 4f       	sbci	r19, 0xFF	; 255
 126:	01 c0       	rjmp	.+2      	; 0x12a <recv_data+0x26>
 128:	9c 01       	movw	r18, r24
 12a:	c1 98       	cbi	0x18, 1	; 24
 12c:	00 00       	nop
 12e:	c1 9a       	sbi	0x18, 1	; 24
 130:	00 00       	nop
 132:	4f 5f       	subi	r20, 0xFF	; 255
 134:	5f 4f       	sbci	r21, 0xFF	; 255
 136:	48 30       	cpi	r20, 0x08	; 8
 138:	51 05       	cpc	r21, r1
 13a:	69 f7       	brne	.-38     	; 0x116 <recv_data+0x12>
 13c:	c9 01       	movw	r24, r18
 13e:	08 95       	ret

00000140 <_exit>:
 140:	f8 94       	cli

00000142 <__stop_program>:
 142:	ff cf       	rjmp	.-2      	; 0x142 <__stop_program>
